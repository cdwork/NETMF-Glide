<?xml version="1.0" encoding="utf-8" ?>
<example>
  Create a new .NET Micro Framework project using the Console Application template and call it "Test".
  Next, open Resources.resx, select Add Resource and click Add New Text File.
  In the prompt, name the new resource "Window" and click Add.
  Now, copy the XML below and paste it into the file and save.
  <code>
    <![CDATA[
<Glide Version="1.0.7">
  <Window Name="window" Width="320" Height="240" BackColor="dce3e7">
    <Dropdown Name="dropdown" X="100" Y="104" Width="120" Height="32" Alpha="255" Text="Select:" Font="4" FontColor="000000">
      <Option Value="Data0">Label0</Option>
      <Option Value="Data1">Label1</Option>
      <Option Value="Data2">Label2</Option>
      <Option Value="Data3">Label3</Option>
      <Option Value="Data4">Label4</Option>
      <Option Value="Data5">Label5</Option>
      <Option Value="Data6">Label6</Option>
      <Option Value="Data7">Label7</Option>
      <Option Value="Data8">Label8</Option>
      <Option Value="Data9">Label9</Option>
    </Dropdown>
  </Window>
</Glide>
    ]]>
  </code>
  Open Program.cs and replace the code with the code below:
  <code>
    <![CDATA[
using System.Threading;

using Microsoft.SPOT;

using GHI.Glide;
using GHI.Glide.Display;
using GHI.Glide.UI;

namespace Test
{
    public class Program
    {
        // This will hold the main window.
        static Window window;

        // This will hold our dropdown's list.
        static List list = null;

        public static void Main()
        {
            // Load the window
            window = GlideLoader.LoadWindow(Resources.GetString(Resources.StringResources.Window));

            // Activate touch
            GlideTouch.Initialize();

            // Initialize the window.
            InitWin();

            // Assigning a window to MainWindow flushes it to the screen.
            // This also starts event handling on the window.
            Glide.MainWindow = window;

            Thread.Sleep(-1);
        }

        static void InitWin()
        {
            // Get the Dropdown
            Dropdown dropdown = (Dropdown)window.GetChildByName("dropdown");
            dropdown.TapEvent += new OnTap(dropdown_TapEvent);
            dropdown.ValueChangedEvent += new OnValueChanged(dropdown_ValueChangedEvent);

            // Create the list that the Dropdown uses...
            list = new List(dropdown.Options, 150);
            
            // Or you can provide your own options
            /*
            ArrayList options = new ArrayList()
            {
                // Each object array contains Label, Data
                new object[2] { "Option #1", 1 },
                new object[2] { "Option #2", 2 },
                new object[2] { "Option #3", 3 },
                new object[2] { "Option #4", 4 },
                new object[2] { "Option #5", 5 }
            };
            list = new List(options, 150);
            */
            
            list.CloseEvent += new OnClose(list_CloseEvent);
        }

        // When the Dropdown is tapped it will open it's list.
        static void dropdown_TapEvent(object sender)
        {
            Glide.OpenList(sender, list);
        }

        // This shows when the Dropdown's value changes.
        static void dropdown_ValueChangedEvent(object sender)
        {
            Dropdown dropdown = (Dropdown)sender;
            Debug.Print("Dropdown value: " + dropdown.Text + " : " + dropdown.Value.ToString());
        }

        static void list_CloseEvent(object sender)
        {
            Glide.CloseList();
        }
    }
}
    ]]>
  </code>
  Before we run it, we must add the Glide reference by right-clicking References and selecting Add Reference.
  In the new window select the Browse tab, locate GHI.Glide and click Ok.
  Now that everything is ready, press F5 to run the example.
</example>
